### QIIME Workflow Overview
Make Mapping File
Make Barcode File 
Combine Paired end Reads
Split libraries
Quality Filtering: Chimeras
Quality Filtering cont (filtering tables)
Discard chimeric OTUs
Remove OTUs observed in blanks
Remove singletons
Summarize tables
Diversity analysis
###

### Notes on USEARCH61
The method I used for chimera checking during quality filtering was USEARCH61
USEARCH61
Is not included in the qiime package, and must be downloaded and put into the macqiime directory
Is faster than ChimeraSlayer, and hasn’t caused me as many problems
Is the more recent pipeline for chimera checking created by the teams that made uchime and chimeraSlayer
The free version of USEARCH has a working memory limit of 3GB (the 6GB version costs 900$). So, the input files need to be split and processed separately before being recombined in larger projects, in order not to go over the USEARCH61 memory limit.
###


#Make Mapping File

validate_mapping_file.py -m map_16sdata.txt -o vmf

#Make Barcode File 
###
Use the grep function to search for the forward and reverse barcodes to determine barcode orientation
Check to see where the barcodes are in the files, by using grep to search for the barcodes and color the files
###

cat fullSequenceData.fasta |gret "CAGTTCAT"| wc -l
cat fullSequenceData.fasta |gret "ATGAACTG"| wc -l 

cat fullSequenceData.fasta |gret "CAGTTCAT" --color=always| head

###
Open the fastq sequence file in TextEdit to see its format
make sure the full.fasta does not use > instead of @. 
To fix the file’s format, open it in TextEdit and add the @ using find and replace
###

###
Barcodes can be extracted and put into its own file using the “extract_barcodes.py” script
-f, --fastq1
Input fastq filepath. This file is considered read 1.
-c, --input_type
Specify the input type. barcode_single_end: Input is a single fastq file, that starts with the barcode sequence. [default: barcode_single_end]
As we saw before using grep, this data is single end
-l, --bc1_len
Specify the length, in base pairs, of barcode 1. This applies to the –fastq1 file and all options specified by –input_type [default: 6]
Change this to 8bp
-m, --mapping_fp
Filepath of mapping file. NOTE: Must contain a header line indicating SampleID in the first column and BarcodeSequence in the second, LinkerPrimerSequence in the third and a ReversePrimer column before the final Description column. Needed for –attempt_read_orientation option. [default: None]
-o 
In the output directory, there will be fastq files (barcode file, and one or two reads files)

note here the barcode length is 8bp
###

extract_barcodes.py -f fullSequenceData.fasta -o processed_seq/ -m map_16sdata.txt -l 8





Combine Paired end Reads
Split libraries
Quality Filtering: Chimeras
Quality Filtering cont (filtering tables)
Discard chimeric OTUs
Remove OTUs observed in blanks
Remove singletons
Summarize tables
Diversity analysis






